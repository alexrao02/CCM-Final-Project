PIG CODE

-----------------------------------------------------------------------------------------------------


A = LOAD '/root/news_.csv' USING PigStorage(',') AS 
(text:chararray,likes:int,comments:int,shares:int);
DUMP A
B = filter A by $0 is not null;
C = FOREACH B GENERATE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
(REPLACE(REPLACE(REPLACE($0,'\\"', ','),' ', ','),'\\_', ','),'\\-', ','),'\\-', ','),'\\?', ','),'\\=', ','),'\\.',','),'.CNBC.COM',','),'\\/',',') as (line);
words = foreach C generate flatten(TOKENIZE(line)) as aword;
grwords = group words by aword;
MapRed = foreach grwords generate group, COUNT(words) AS cnt;
SortMapRed = order MapRed by cnt DESC;
R = LIMIT SortMapRed 50;
STORE R INTO 'all_top50' USING PigStorage(',');


A = LOAD '/root/news_.csv' USING PigStorage(',') AS (text:chararray,likes:int,comments:int,shares:int);
B = filter A by $1 is not null;
E = order B by likes DESC;
C = FOREACH E GENERATE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
(REPLACE(REPLACE($0,' ', ','),'\\_', ','),'\\-', ','),'\\-', ','),'\\?', ','),'\\=', ','),'\\.',','),'.CNBC.COM',','),'\\/',',') as (line);
words = foreach C generate flatten(TOKENIZE(line)) as aword;
grwords = group words by aword;
MapRed = foreach grwords generate group, COUNT(words) AS cnt;
SortMapRed = order MapRed by cnt DESC;
R = LIMIT SortMapRed 50;
STORE R INTO 'likes_top50' USING PigStorage(',');




A = LOAD '/root/news_.csv' USING PigStorage(',') AS (text:chararray,likes:int,comments:int,shares:int);
B = filter A by $2 is not null;
E = order B by comments DESC;
C = FOREACH E GENERATE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
(REPLACE(REPLACE($0,' ', ','),'\\_', ','),'\\-', ','),'\\-', ','),'\\?', ','),'\\=', ','),'\\.',','),'.CNBC.COM',','),'\\/',',') as (line);
words = foreach C generate flatten(TOKENIZE(line)) as aword;
grwords = group words by aword;
MapRed = foreach grwords generate group, COUNT(words) AS cnt;
SortMapRed = order MapRed by cnt DESC;
R = LIMIT SortMapRed 50;
STORE R INTO 'comments_top50' USING PigStorage(',');




A = LOAD '/root/news_.csv' USING PigStorage(',') AS (text:chararray,likes:int,comments:int,shares:int);
B = filter A by $3 is not null;
E = order B by shares DESC;
C = FOREACH E GENERATE REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE
(REPLACE(REPLACE($0,' ', ','),'\\_', ','),'\\-', ','),'\\-', ','),'\\?', ','),'\\=', ','),'\\.',','),'.CNBC.COM',','),'\\/',',') as (line);
words = foreach C generate flatten(TOKENIZE(line)) as aword;
grwords = group words by aword;
MapRed = foreach grwords generate group, COUNT(words) AS cnt;
SortMapRed = order MapRed by cnt DESC;
R = LIMIT SortMapRed 50;
STORE R INTO 'shares_top50' USING PigStorage(',');


-----------------------------------------------------------------------------------------------------

about pig:
The above four parts are the code for sorting  and finding the frequency of the words by pig in the original order , sort by likes, sort by comments and sort by shares. All of the results are taken from the top 50 from the largest to the smallest
First you need to upload the news_.csv file to hadoop, pay attention to the path, then enter the above four parts of code respectively.





about python:
fbk.py Crawling code
data_processd.py data processd code
/Cloud/cloud.py Generate word cloud map code
find_different&same_word.py     The output file is the output result
The pig file is the relevant file for sorting and finding the frequency of words  top50_wordis the output result.
